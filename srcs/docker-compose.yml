version: '3.9'

services:
  mariadb:
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
      args:
        - DB_NAME=${DB_NAME}
        - DB_USER=${DB_USER}
        - DB_PASSWORD=${DB_PASSWORD}
    container_name: mariadb
    image: mariadb
    networks:
      - wordpress-network
    volumes:
      - db-data:/var/lib/mysql
      - ./requirements/mariadb/my.cnf:/etc/mysql/my.cnf
    environment:
      - TZ=${TZ}
    restart: always

  wordpress:
    build:
      context: requirements/wordpress
      dockerfile: Dockerfile
      args:
        - DB_NAME=${DB_NAME}
        - DB_USER=${DB_USER}
        - DB_PASSWORD=${DB_PASSWORD}
        - DB_HOST=${DB_HOST}
        - TZ=${TZ}
    container_name: wordpress
    image: wordpress
    networks:
      - nginx-network
      - wordpress-network
    volumes:
      - wordpress_files:/var/www/html
      - ./requirements/wordpress/www.conf:/etc/php/8.2/fpm/pool.d/www.conf
    environment:
      - TZ=${TZ}
      - WP_USER=${WP_USER}
      - WP_PASSWORD=${WP_PASSWORD}
      - WP_EMAIL=${WP_EMAIL}
      - WP_ADMIN_USER=${WP_ADMIN_USER}
      - WP_ADMIN_PASSWORD=${WP_ADMIN_PASSWORD}
      - WP_ADMIN_EMAIL=${WP_ADMIN_EMAIL}
    depends_on:
      - mariadb
    restart: always

  nginx:
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    container_name: nginx
    image: nginx
    networks:
      - nginx-network
    ports:
#      - "80:80"
      - "443:443"
    volumes:
      - wordpress_files:/var/www/html
#      - ./requirements/nginx/nginx.conf:/etc/nginx/nginx.conf
#      - ./requirements/nginx/default:/etc/nginx/sites-available/default
    environment:
      - TZ=${TZ}
    depends_on:
      - wordpress
    restart: always

networks:
  nginx-network:
  wordpress-network:
 
volumes:
 wordpress_files:
   driver: local
   driver_opts:
     type: none
     device: /home/debian/data/wordpress_files
     o: bind
 db-data:
   driver: local
   driver_opts:
     type: none
     device: /home/debian/data/db-data
     o: bind

